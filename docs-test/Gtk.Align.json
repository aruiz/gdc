{
    "doc": "<p>Controls how a widget deals with extra space in a single (x or y)\ndimension.</p><p>Alignment only matters if the widget receives a \u201ctoo large\u201d allocation,\nfor example if you packed the widget with the <span data-xref=\"Gtk.Widget-expand\"/>\nflag inside a <span data-xref=\"Gtk.Box\"/>, then the widget might get extra space.  If\nyou have for example a 16x16 icon inside a 32x32 space, the icon\ncould be scaled and stretched, it could be centered, or it could be\npositioned to one side of the space.</p><p>Note that in horizontal context @GTK_ALIGN_START and @GTK_ALIGN_END\nare interpreted relative to text direction.</p><p>GTK_ALIGN_BASELINE support for it is optional for containers and widgets, and\nit is only supported for vertical alignment.  When its not supported by\na child or a container it is treated as @GTK_ALIGN_FILL.</p>",
    "kind": "enum",
    "members": [
        {
            "doc": "<p>stretch to fill all space if possible, center if\n    no meaningful way to stretch</p>",
            "kind": "default",
            "name": "fill"
        },
        {
            "doc": "<p>snap to left or top side, leaving space on right\n    or bottom</p>",
            "kind": "default",
            "name": "start"
        },
        {
            "doc": "<p>snap to right or bottom side, leaving space on left\n    or top</p>",
            "kind": "default",
            "name": "end"
        },
        {
            "doc": "<p>center natural width of widget inside the\n    allocation</p>",
            "kind": "default",
            "name": "center"
        },
        {
            "doc": "<p>align the widget according to the baseline. Since 3.10.</p>",
            "kind": "default",
            "name": "baseline"
        }
    ],
    "name": "Align"
}