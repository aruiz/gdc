{
    "constructors": [
        {
            "doc": "<p>Creates a new <span data-xref=\"Gtk.IconSource\"/>. A <span data-xref=\"Gtk.IconSource\"/> contains a <span data-xref=\"GdkPixbuf.Pixbuf\">GdkPixbuf.Pixbuf</span> (or\nimage filename) that serves as the base image for one or more of the\nicons in a <span data-xref=\"Gtk.IconSet\"/>, along with a specification for which icons in the\nicon set will be based on that pixbuf or image file. An icon set contains\na set of icons that represent \u201cthe same\u201d logical concept in different states,\ndifferent global text directions, and different sizes.</p><p>So for example a web browser\u2019s \u201cBack to Previous Page\u201d icon might\npoint in a different direction in Hebrew and in English; it might\nlook different when insensitive; and it might change size depending\non toolbar mode (small/large icons). So a single icon set would\ncontain all those variants of the icon. <span data-xref=\"Gtk.IconSet\"/> contains a list\nof <span data-xref=\"Gtk.IconSource\"/> from which it can derive specific icon variants in\nthe set.</p><p>In the simplest case, <span data-xref=\"Gtk.IconSet\"/> contains one source pixbuf from\nwhich it derives all variants. The convenience function\n<span data-xref=\"Gtk.IconSet.new_from_pixbuf\"/> handles this case; if you only have\none source pixbuf, just use that function.</p><p>If you want to use a different base pixbuf for different icon\nvariants, you create multiple icon sources, mark which variants\nthey\u2019ll be used to create, and add them to the icon set with\n<span data-xref=\"Gtk.IconSet.add_source\"/>.</p><p>By default, the icon source has all parameters wildcarded. That is,\nthe icon source will be used as the base icon for any desired text\ndirection, widget state, or icon size.</p>",
            "kind": "constructor",
            "name": "new",
            "parameters": [],
            "retval": {
                "type": "Gtk.IconSource"
            }
        }
    ],
    "doc": "",
    "fields": [],
    "kind": "class",
    "methods": [
        {
            "doc": "<p>Creates a copy of <pre>source</pre>; mostly useful for language bindings.</p>",
            "kind": "method",
            "name": "copy",
            "parameters": [],
            "retval": {
                "type": "Gtk.IconSource"
            }
        },
        {
            "doc": "<p>Frees a dynamically-allocated icon source, along with its\nfilename, size, and pixbuf fields if those are not <pre>null</pre>.</p>",
            "kind": "method",
            "name": "free",
            "parameters": [],
            "retval": {
                "type": "void"
            }
        },
        {
            "doc": "<p>Obtains the text direction this icon source applies to. The return\nvalue is only useful/meaningful if the text direction is not\nwildcarded.</p>",
            "kind": "method",
            "name": "get_direction",
            "parameters": [],
            "retval": {
                "type": "Gtk.TextDirection"
            }
        },
        {
            "doc": "<p>Gets the value set by <span data-xref=\"Gtk.IconSource.set_direction_wildcarded\"/>.</p>",
            "kind": "method",
            "name": "get_direction_wildcarded",
            "parameters": [],
            "retval": {
                "type": "Boolean"
            }
        },
        {
            "doc": "<p>Retrieves the source filename, or <pre>null</pre> if none is set. The\nfilename is not a copy, and should not be modified or expected to\npersist beyond the lifetime of the icon source.</p>",
            "kind": "method",
            "name": "get_filename",
            "parameters": [],
            "retval": {
                "type": "String"
            }
        },
        {
            "doc": "<p>Retrieves the source icon name, or <pre>null</pre> if none is set. The\nicon_name is not a copy, and should not be modified or expected to\npersist beyond the lifetime of the icon source.</p>",
            "kind": "method",
            "name": "get_icon_name",
            "parameters": [],
            "retval": {
                "type": "String"
            }
        },
        {
            "doc": "<p>Retrieves the source pixbuf, or <pre>null</pre> if none is set.\nIn addition, if a filename source is in use, this\nfunction in some cases will return the pixbuf from\nloaded from the filename. This is, for example, true\nfor the GtkIconSource passed to the <span data-xref=\"Gtk.Style\"/> render_icon()\nvirtual function. The reference count on the pixbuf is\nnot incremented.</p>",
            "kind": "method",
            "name": "get_pixbuf",
            "parameters": [],
            "retval": {
                "type": "GdkPixbuf.Pixbuf"
            }
        },
        {
            "doc": "<p>Obtains the icon size this source applies to. The return value\nis only useful/meaningful if the icon size is not wildcarded.</p>",
            "kind": "method",
            "name": "get_size",
            "parameters": [],
            "retval": {
                "type": "Number(gint)"
            }
        },
        {
            "doc": "<p>Gets the value set by <span data-xref=\"Gtk.IconSource.set_size_wildcarded\"/>.</p>",
            "kind": "method",
            "name": "get_size_wildcarded",
            "parameters": [],
            "retval": {
                "type": "Boolean"
            }
        },
        {
            "doc": "<p>Obtains the widget state this icon source applies to. The return\nvalue is only useful/meaningful if the widget state is not\nwildcarded.</p>",
            "kind": "method",
            "name": "get_state",
            "parameters": [],
            "retval": {
                "type": "Gtk.StateType"
            }
        },
        {
            "doc": "<p>Gets the value set by <span data-xref=\"Gtk.IconSource.set_state_wildcarded\"/>.</p>",
            "kind": "method",
            "name": "get_state_wildcarded",
            "parameters": [],
            "retval": {
                "type": "Boolean"
            }
        },
        {
            "doc": "<p>Sets the text direction this icon source is intended to be used\nwith.</p><p>Setting the text direction on an icon source makes no difference\nif the text direction is wildcarded. Therefore, you should usually\ncall <span data-xref=\"Gtk.IconSource.set_direction_wildcarded\"/> to un-wildcard it\nin addition to calling this function.</p>",
            "kind": "method",
            "name": "set_direction",
            "parameters": [
                {
                    "allow_none": false,
                    "argname": "direction",
                    "direction": "in",
                    "type": "Gtk.TextDirection"
                }
            ],
            "retval": {
                "type": "void"
            }
        },
        {
            "doc": "<p>If the text direction is wildcarded, this source can be used\nas the base image for an icon in any <span data-xref=\"Gtk.TextDirection\"/>.\nIf the text direction is not wildcarded, then the\ntext direction the icon source applies to should be set\nwith <span data-xref=\"Gtk.IconSource.set_direction\"/>, and the icon source\nwill only be used with that text direction.</p><p><span data-xref=\"Gtk.IconSet\"/> prefers non-wildcarded sources (exact matches) over\nwildcarded sources, and will use an exact match when possible.</p>",
            "kind": "method",
            "name": "set_direction_wildcarded",
            "parameters": [
                {
                    "allow_none": false,
                    "argname": "setting",
                    "direction": "in",
                    "type": "Boolean"
                }
            ],
            "retval": {
                "type": "void"
            }
        },
        {
            "doc": "<p>Sets the name of an image file to use as a base image when creating\nicon variants for <span data-xref=\"Gtk.IconSet\"/>. The filename must be absolute.</p>",
            "kind": "method",
            "name": "set_filename",
            "parameters": [
                {
                    "allow_none": false,
                    "argname": "filename",
                    "direction": "in",
                    "type": "String"
                }
            ],
            "retval": {
                "type": "void"
            }
        },
        {
            "doc": "<p>Sets the name of an icon to look up in the current icon theme\nto use as a base image when creating icon variants for <span data-xref=\"Gtk.IconSet\"/>.</p>",
            "kind": "method",
            "name": "set_icon_name",
            "parameters": [
                {
                    "allow_none": true,
                    "argname": "icon_name",
                    "direction": "in",
                    "type": "String"
                }
            ],
            "retval": {
                "type": "void"
            }
        },
        {
            "doc": "<p>Sets a pixbuf to use as a base image when creating icon variants\nfor <span data-xref=\"Gtk.IconSet\"/>.</p>",
            "kind": "method",
            "name": "set_pixbuf",
            "parameters": [
                {
                    "allow_none": false,
                    "argname": "pixbuf",
                    "direction": "in",
                    "type": "GdkPixbuf.Pixbuf"
                }
            ],
            "retval": {
                "type": "void"
            }
        },
        {
            "doc": "<p>Sets the icon size this icon source is intended to be used\nwith.</p><p>Setting the icon size on an icon source makes no difference\nif the size is wildcarded. Therefore, you should usually\ncall <span data-xref=\"Gtk.IconSource.set_size_wildcarded\"/> to un-wildcard it\nin addition to calling this function.</p>",
            "kind": "method",
            "name": "set_size",
            "parameters": [
                {
                    "allow_none": false,
                    "argname": "size",
                    "direction": "in",
                    "type": "Number(gint)"
                }
            ],
            "retval": {
                "type": "void"
            }
        },
        {
            "doc": "<p>If the icon size is wildcarded, this source can be used as the base\nimage for an icon of any size.  If the size is not wildcarded, then\nthe size the source applies to should be set with\n<span data-xref=\"Gtk.IconSource.set_size\"/> and the icon source will only be used\nwith that specific size.</p><p><span data-xref=\"Gtk.IconSet\"/> prefers non-wildcarded sources (exact matches) over\nwildcarded sources, and will use an exact match when possible.</p><p><span data-xref=\"Gtk.IconSet\"/> will normally scale wildcarded source images to produce\nan appropriate icon at a given size, but will not change the size\nof source images that match exactly.</p>",
            "kind": "method",
            "name": "set_size_wildcarded",
            "parameters": [
                {
                    "allow_none": false,
                    "argname": "setting",
                    "direction": "in",
                    "type": "Boolean"
                }
            ],
            "retval": {
                "type": "void"
            }
        },
        {
            "doc": "<p>Sets the widget state this icon source is intended to be used\nwith.</p><p>Setting the widget state on an icon source makes no difference\nif the state is wildcarded. Therefore, you should usually\ncall <span data-xref=\"Gtk.IconSource.set_state_wildcarded\"/> to un-wildcard it\nin addition to calling this function.</p>",
            "kind": "method",
            "name": "set_state",
            "parameters": [
                {
                    "allow_none": false,
                    "argname": "state",
                    "direction": "in",
                    "type": "Gtk.StateType"
                }
            ],
            "retval": {
                "type": "void"
            }
        },
        {
            "doc": "<p>If the widget state is wildcarded, this source can be used as the\nbase image for an icon in any <span data-xref=\"Gtk.StateType\"/>.  If the widget state\nis not wildcarded, then the state the source applies to should be\nset with <span data-xref=\"Gtk.IconSource.set_state\"/> and the icon source will\nonly be used with that specific state.</p><p><span data-xref=\"Gtk.IconSet\"/> prefers non-wildcarded sources (exact matches) over\nwildcarded sources, and will use an exact match when possible.</p><p><span data-xref=\"Gtk.IconSet\"/> will normally transform wildcarded source images to\nproduce an appropriate icon for a given state, for example\nlightening an image on prelight, but will not modify source images\nthat match exactly.</p>",
            "kind": "method",
            "name": "set_state_wildcarded",
            "parameters": [
                {
                    "allow_none": false,
                    "argname": "setting",
                    "direction": "in",
                    "type": "Boolean"
                }
            ],
            "retval": {
                "type": "void"
            }
        }
    ],
    "name": "IconSource"
}